name: Run Cross-Platform Tests (Build From Source)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload built script artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            build/distributions/develocity-gradle-build-validation-*.zip
            build/distributions/develocity-maven-build-validation-*.zip

  cross_platform_tests:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        # Only the latest available version of each OS is tested
        # Both macOS 13 and 14 are tested because they use different architectures
        os:
          - ubuntu-24.04
          - macos-13 # x86_64
          - macos-14 # aarch64
          - windows-2025
        # Only LTS versions greater than 8 are tested
        java-version: [ '8', '11', '17', '21' ]
        include:
          - os: ubuntu-24.04
            shell: bash
          - os: macos-13
            shell: bash
          - os: macos-14
            shell: bash
          - os: windows-2025
            shell: wsl-bash
    defaults:
      run:
        shell: ${{ matrix.shell }} {0}
    env:
      DEVELOCITY_ACCESS_KEY: ${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}
      WSLENV: GITHUB_ACTIONS:GITHUB_SERVER_URL:GITHUB_REPOSITORY:GITHUB_RUN_ID:GITHUB_WORKFLOW:GITHUB_HEAD_REF:DEVELOCITY_ACCESS_KEY
    steps:
      - name: Set up WSL
        if: ${{ runner.os == 'Windows' }}
        uses: Vampire/setup-wsl@v6
        with:
          distribution: Ubuntu-24.04
          additional-packages: curl unzip wget apt-transport-https gnupg
      - name: Set up JDK ${{ matrix.java-version }} on WSL
        if: ${{ runner.os == 'Windows' }}
        run: |
          wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | sudo apt-key add -
          echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | sudo tee /etc/apt/sources.list.d/adoptium.list
          sudo apt-get update
          sudo apt-get install -y temurin-${{ matrix.java-version }}-jdk
      - name: Set up JDK ${{ matrix.java-version }}
        if: ${{ runner.os != 'Windows' }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.os == 'macos-14' && 'zulu' || 'temurin' }} # No Temurin JDK 8 distribution for aarch64
      - name: Download built script artifacts
        uses: actions/download-artifact@v5
        with:
          name: artifacts
      - name: Extract build validation scripts
        run: |
          unzip -o develocity-gradle-build-validation-*.zip
          unzip -o develocity-maven-build-validation-*.zip
      - name: Run Gradle Experiment 01
        working-directory: develocity-gradle-build-validation
        run: ./01-validate-incremental-building.sh -r https://github.com/etiennestuder/java-ordered-properties -t build -s https://ge.solutions-team.gradle.com
      - name: Run Gradle Experiment 02
        working-directory: develocity-gradle-build-validation
        run: ./02-validate-local-build-caching-same-location.sh -r https://github.com/etiennestuder/java-ordered-properties -t build -s https://ge.solutions-team.gradle.com
      - name: Run Gradle Experiment 03
        working-directory: develocity-gradle-build-validation
        run: ./03-validate-local-build-caching-different-locations.sh -r https://github.com/etiennestuder/java-ordered-properties -t build -s https://ge.solutions-team.gradle.com
      - name: Run Gradle Experiment 04
        working-directory: develocity-gradle-build-validation
        run: ./04-validate-remote-build-caching-ci-ci.sh -1 https://ge.solutions-team.gradle.com/s/p4ghldkcscfwi -2 https://ge.solutions-team.gradle.com/s/jhzljnet32x5m
      - name: Run Gradle Experiment 05
        working-directory: develocity-gradle-build-validation
        run: ./05-validate-remote-build-caching-ci-local.sh -1 https://ge.solutions-team.gradle.com/s/dgndhzndrffks -s https://ge.solutions-team.gradle.com -u https://ge.solutions-team.gradle.com/cache/
      - name: Run Maven Experiment 01
        working-directory: develocity-maven-build-validation
        run: ./01-validate-local-build-caching-same-location.sh -r https://github.com/gradle/maven-build-scan-quickstart.git -g test -s https://ge.solutions-team.gradle.com -a '-B'
      - name: Run Maven Experiment 02
        working-directory: develocity-maven-build-validation
        run: ./02-validate-local-build-caching-different-locations.sh -r https://github.com/gradle/maven-build-scan-quickstart.git -g test -s https://ge.solutions-team.gradle.com -a '-B'
      - name: Run Maven Experiment 03
        working-directory: develocity-maven-build-validation
        run: ./03-validate-remote-build-caching-ci-ci.sh -1 https://ge.solutions-team.gradle.com/s/sysk4hrdbkja6 -2 https://ge.solutions-team.gradle.com/s/f7yfwfxqzg5us
      - name: Run Maven Experiment 04
        working-directory: develocity-maven-build-validation
        run: ./04-validate-remote-build-caching-ci-local.sh -1 https://ge.solutions-team.gradle.com/s/4zpdvd2l2ualu -s https://ge.solutions-team.gradle.com -a '-B'
