// Don't run against the included builds (if the main build has any).
def isTopLevelBuild = gradle.getParent() == null
if (isTopLevelBuild) {
    settingsEvaluated { settings ->
        settings.buildCache {
            local {
                enabled = false
            }
            remote(HttpBuildCache) {
                enabled = true
                push = false
                def remoteBuildCacheUrl = remoteBuildCacheUrl
                if (remoteBuildCacheUrl) {
                    url = remoteBuildCacheUrl.path.endsWith("/") ? remoteBuildCacheUrl : withPathTrailingSlash(remoteBuildCacheUrl)
                }
            }
        }
    }
}

URI getRemoteBuildCacheUrl() {
    def projectProperties = gradle.startParameter.projectProperties
    if (projectProperties.containsKey("com.gradle.enterprise.build_validation.remoteBuildCacheUrl")) {
        return new URI(projectProperties.get("com.gradle.enterprise.build_validation.remoteBuildCacheUrl"))
    } else {
        return null
    }
}

static URI withPathTrailingSlash(URI uri) {
    new URI(uri.scheme, uri.userInfo, uri.host, uri.port, uri.path + "/", uri.query, uri.fragment)
}
